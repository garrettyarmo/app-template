/**
 * @file nba-picks-schema.ts
 * @description
 * This file defines the Drizzle schema for the nbaPicksTable. It stores the AI-generated
 * NBA picks. Each record corresponds to a single game pick generated by the AI model.
 *
 * Key fields:
 * - id: Primary key (UUID)
 * - gameId: The external API's unique identifier for an NBA game
 * - spreadPick: The recommended spread pick, e.g., "Lakers -3.5"
 * - explanation: The AI's rationale for picking that spread
 * - createdAt, updatedAt: Timestamps for creation and last update
 *
 * @notes
 * - "spreadPick" is a text field because we can store any textual representation
 *   of the spread. We could parse it if needed in user interface code.
 * - "explanation" can hold a write-up from the AI.
 * - The "gameId" is used to link or cross-reference external game IDs.
 * - We rely on Drizzle to generate the correct TypeScript types for us.
 * - Make sure to add this table to the schema in db/db.ts and export from db/schema/index.ts
 */

import { pgTable, text, timestamp, uuid } from "drizzle-orm/pg-core"

/**
 * The nbaPicksTable schema
 *
 * Columns:
 * - id: Primary key, UUID
 * - gameId: External reference to the unique game identifier
 * - spreadPick: e.g. "Lakers -3.5"
 * - explanation: AI's explanation for the pick
 * - createdAt: Creation time
 * - updatedAt: Last update time
 */
export const nbaPicksTable = pgTable("nba_picks", {
  /**
   * Unique identifier for each record (UUID)
   */
  id: uuid("id").defaultRandom().primaryKey(),

  /**
   * The external ID for the NBA game
   */
  gameId: text("game_id").notNull(),

  /**
   * The recommended spread pick, e.g. "Lakers -3.5"
   */
  spreadPick: text("spread_pick").notNull(),

  /**
   * AI's rationale or explanation for picking that spread
   */
  explanation: text("explanation"),

  /**
   * Timestamp at record creation
   */
  createdAt: timestamp("created_at").defaultNow().notNull(),

  /**
   * Timestamp at last update.  The `$onUpdate` calls new Date() whenever we update.
   */
  updatedAt: timestamp("updated_at")
    .defaultNow()
    .notNull()
    .$onUpdate(() => new Date())
})

/**
 * InsertNbaPick type is used for creating new records
 * (in server actions or seeds).
 */
export type InsertNbaPick = typeof nbaPicksTable.$inferInsert

/**
 * SelectNbaPick type is used for selecting/fetching records.
 */
export type SelectNbaPick = typeof nbaPicksTable.$inferSelect
